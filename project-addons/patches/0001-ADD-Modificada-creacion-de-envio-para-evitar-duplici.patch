From 0e013563e6babfe046581aec581193d541c59006 Mon Sep 17 00:00:00 2001
From: jesusVMayor <jesus@pexego.es>
Date: Thu, 5 Mar 2015 19:45:10 +0100
Subject: [PATCH] [ADD]Modificada creacion de envio para evitar duplicidad de
 procurement.

---
 addons/sale/sale.py |   25 +++++++++++++------------
 1 file changed, 13 insertions(+), 12 deletions(-)

diff --git a/addons/sale/sale.py b/addons/sale/sale.py
index 17712a9..3a413e3 100644
--- a/addons/sale/sale.py
+++ b/addons/sale/sale.py
@@ -307,7 +307,7 @@ class sale_order(osv.osv):
         return {'warning': warning, 'value': value}
 
     def get_salenote(self, cr, uid, ids, partner_id, context=None):
-        context_lang = context.copy() 
+        context_lang = context.copy()
         if partner_id:
             partner_lang = self.pool.get('res.partner').browse(cr, uid, partner_id, context=context).lang
             context_lang.update({'lang': partner_lang})
@@ -343,7 +343,7 @@ class sale_order(osv.osv):
         if pricelist:
             val['pricelist_id'] = pricelist
         sale_note = self.get_salenote(cr, uid, ids, part.id, context=context)
-        if sale_note: val.update({'note': sale_note})  
+        if sale_note: val.update({'note': sale_note})
         return {'value': val}
 
     def create(self, cr, uid, vals, context=None):
@@ -449,7 +449,7 @@ class sale_order(osv.osv):
             view of one of the newly created invoices
         """
         mod_obj = self.pool.get('ir.model.data')
-        
+
         # create invoices through the sales orders' workflow
         inv_ids0 = set(inv.id for sale in self.browse(cr, uid, ids, context) for inv in sale.invoice_ids)
         self.signal_workflow(cr, uid, ids, 'manual_invoice')
@@ -597,7 +597,7 @@ class sale_order(osv.osv):
         assert len(ids) == 1, 'This option should only be used for a single id at a time.'
         self.signal_workflow(cr, uid, ids, 'order_confirm')
         return True
-        
+
     def action_wait(self, cr, uid, ids, context=None):
         context = context or {}
         for o in self.browse(cr, uid, ids):
@@ -624,7 +624,7 @@ class sale_order(osv.osv):
         try:
             compose_form_id = ir_model_data.get_object_reference(cr, uid, 'mail', 'email_compose_message_wizard_form')[1]
         except ValueError:
-            compose_form_id = False 
+            compose_form_id = False
         ctx = dict()
         ctx.update({
             'default_model': 'sale.order',
@@ -711,8 +711,9 @@ class sale_order(osv.osv):
                     procurement_obj.check(cr, uid, [x.id for x in line.procurement_ids if x.state not in ['cancel', 'done']])
                     line.refresh()
                     #run again procurement that are in exception in order to trigger another move
-                    proc_ids += [x.id for x in line.procurement_ids if x.state in ('exception', 'cancel')]
-                    procurement_obj.reset_to_confirmed(cr, uid, proc_ids, context=context)
+                    line_procs = [x.id for x in line.procurement_ids if x.state in ('exception', 'cancel')]
+                    procurement_obj.reset_to_confirmed(cr, uid, line_procs, context=context)
+                    proc_ids += line_procs
                 elif sale_line_obj.need_procurement(cr, uid, [line.id], context=context):
                     if (line.state == 'done') or not line.product_id:
                         continue
@@ -752,7 +753,7 @@ class sale_order(osv.osv):
         fpos = False
         if fiscal_position:
             fpos = fiscal_obj.browse(cr, uid, fiscal_position, context=context)
-        
+
         for line in order_lines:
             # create    (0, 0,  { fields })
             # update    (1, ID, { fields })
@@ -834,7 +835,7 @@ class sale_order_line(osv.osv):
         res = dict.fromkeys(ids, False)
         for this in self.browse(cr, uid, ids, context=context):
             res[this.id] = this.invoice_lines and \
-                all(iline.invoice_id.state != 'cancel' for iline in this.invoice_lines) 
+                all(iline.invoice_id.state != 'cancel' for iline in this.invoice_lines)
         return res
 
     def _order_lines_from_invoice(self, cr, uid, ids, context=None):
@@ -1288,7 +1289,7 @@ class product_template(osv.Model):
         for template in self.browse(cr, uid, ids, context=context):
             res[template.id] = sum([p.sales_count for p in template.product_variant_ids])
         return res
-    
+
     def action_view_sales(self, cr, uid, ids, context=None):
         act_obj = self.pool.get('ir.actions.act_window')
         mod_obj = self.pool.get('ir.model.data')
@@ -1299,8 +1300,8 @@ class product_template(osv.Model):
         result = act_obj.read(cr, uid, [result], context=context)[0]
         result['domain'] = "[('product_id','in',[" + ','.join(map(str, product_ids)) + "])]"
         return result
-    
-    
+
+
     _columns = {
         'sales_count': fields.function(_sales_count, string='# Sales', type='integer'),
 
-- 
1.7.9.5

